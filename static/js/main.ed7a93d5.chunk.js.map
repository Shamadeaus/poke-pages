{"version":3,"sources":["resources/GitHubIcon.js","shared/FlexSpacer.js","shared/OverflowMenu.js","theme/ThemeContext.js","layout/StandardCard.js","whosThatPokemon/WhosThatPokemon.js","routing/routes.js","layout/ApplicationBar.js","theme/lightTheme.js","theme/darkTheme.js","theme/ThemeProvider.js","app/BodyStyles.js","routing/Router.js","app/App.js","index.js","resources/titleimg.png","resources/nav-logo.png"],"names":["GitHubIcon","SvgIcon","d","useStyles","makeStyles","root","flex","FlexSpacer","classes","className","OverflowMenu","children","color","useState","anchorEl","setAnchorEl","handleClick","useCallback","event","currentTarget","handleClose","menuItems","useMemo","React","Children","map","child","cloneElement","onClick","props","IconButton","aria-controls","aria-haspopup","id","open","onClose","createContext","theme","setTheme","console","warn","padding","StandardCard","Card","WhosThatPokemon","sprite","setSprite","pokemon","setPokemon","handleGetPokemon","value","a","axios","get","dexNumber","data","Autocomplete","onChange","freeSolo","options","pokemonList","getOptionLabel","option","name","style","width","renderInput","params","TextField","label","variant","fullWidth","alt","src","homeRoute","path","component","icon","text","menuButton","logo","margin","height","cursor","list","navLogo","ApplicationBar","useContext","ThemeContext","toggleTheme","drawerOpen","setDrawerOpen","history","useHistory","toggleDrawer","current","AppBar","position","Toolbar","edge","aria-label","push","href","MenuItem","Drawer","Divider","List","routes","route","key","ListItem","button","ListItemIcon","ListItemText","primary","lightTheme","createMuiTheme","palette","main","darkTheme","type","ThemeProvider","localStorage","getItem","setItem","currentTheme","Provider","BodyStyles","background","default","Router","exact","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ed7a93d5.chunk.js","sourcesContent":["import React from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction GitHubIcon() {\r\n    return (\r\n        <SvgIcon>\r\n            <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"/>\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport default GitHubIcon","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nfunction FlexSpacer() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <span className={classes.root}/>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flex: 1\r\n    }\r\n})\r\n\r\nexport default FlexSpacer\r\n","import React, {useState, useCallback, useMemo} from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVert from '@material-ui/icons/MoreVert'\r\nimport Menu from '@material-ui/core/Menu'\r\n\r\nfunction OverflowMenu({className, children, color = 'inherit'}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = useCallback(event => {\r\n        setAnchorEl(event.currentTarget)\r\n    }, [])\r\n\r\n    const handleClose = useCallback(() => {\r\n        setAnchorEl(null)\r\n    }, [])\r\n\r\n    const menuItems = useMemo(() => {\r\n        return React.Children.map(children, child => {\r\n            const onClick = () => {\r\n                handleClose()\r\n                child.props.onClick()\r\n            }\r\n            return React.cloneElement(child, {onClick})\r\n        })\r\n    }, [children, handleClose])\r\n\r\n    return (\r\n        <>\r\n            <IconButton className={className} color={color} aria-controls=\"overflow-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <MoreVert/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"overflow-menu\"\r\n                anchorEl={anchorEl}\r\n                open={!!anchorEl}\r\n                onClose={handleClose}\r\n            >\r\n                {menuItems}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OverflowMenu\r\n","import React from 'react'\r\n\r\nexport default React.createContext({\r\n    theme: 'light',\r\n    setTheme: () => {\r\n        console.warn('not implemented')\r\n    }\r\n})\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '8px'\r\n    }\r\n})\r\n\r\nfunction StandardCard({children}) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            {children}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default StandardCard\r\n","import React, {useCallback, useState} from 'react'\r\nimport StandardCard from '../layout/StandardCard'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport pokemonList from '../resources/pokemon-list.json'\r\nimport axios from 'axios'\r\n\r\nfunction WhosThatPokemon() {\r\n    const [sprite, setSprite] = useState(null)\r\n    const [pokemon, setPokemon] = useState(null)\r\n\r\n    const handleGetPokemon = useCallback(async (event, value) => {\r\n        if (value) {\r\n            const {data} = await axios.get(`https://pokeapi.co/api/v2/pokemon/${value.dexNumber}`)\r\n            setPokemon(data)\r\n            setSprite(`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${value.dexNumber}.png`)\r\n        } else {\r\n            setPokemon(null)\r\n            setSprite(null)\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <StandardCard>\r\n            <Autocomplete\r\n                onChange={handleGetPokemon}\r\n                freeSolo\r\n                options={pokemonList}\r\n                getOptionLabel={option => option.name}\r\n                style={{ width: 300 }}\r\n                renderInput={params => (\r\n                    <TextField {...params} label=\"Pokemon\" variant=\"outlined\" fullWidth />\r\n                )}\r\n            />\r\n            {sprite && <img alt={`${pokemon.name}-sprite`} src={sprite}/>}\r\n        </StandardCard>        \r\n    )\r\n}\r\n\r\nexport default WhosThatPokemon\r\n","import React from 'react'\r\nimport Search from '@material-ui/icons/Search'\r\nimport WhosThatPokemon from '../whosThatPokemon/WhosThatPokemon'\r\n\r\nexport const homeRoute = {\r\n    path: '/',\r\n    component: <div>Home</div>\r\n}\r\n\r\nconst whoIsThatPokemon = {\r\n    path: '/whosThatPokemon',\r\n    component: <WhosThatPokemon/>,\r\n    icon: <Search/>,\r\n    text: \"Who's that Pokemon!?\"\r\n}\r\n\r\nexport default [\r\n    whoIsThatPokemon\r\n]","import React, {useContext, useCallback, useState} from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport GitHubIcon from '../resources/GitHubIcon'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport logo from '../resources/titleimg.png'\r\nimport FlexSpacer from '../shared/FlexSpacer'\r\nimport OverflowMenu from '../shared/OverflowMenu'\r\nimport ThemeContext from '../theme/ThemeContext'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport routes from '../routing/routes'\r\nimport { useHistory } from 'react-router-dom'\r\nimport navLogo from '../resources/nav-logo.png'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        padding: '6px'\r\n    },\r\n    logo: {\r\n      margin: '8px 0',\r\n      height: '48px',\r\n      cursor: 'pointer'\r\n    },\r\n    list: {\r\n        width: 255\r\n    },\r\n    navLogo: {\r\n        height: 200,\r\n        width: 140,\r\n        cursor: 'pointer'\r\n    }\r\n}))\r\n\r\nfunction ApplicationBar() {\r\n    const classes = useStyles()\r\n    const {toggleTheme, theme} = useContext(ThemeContext)\r\n    const [drawerOpen, setDrawerOpen] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const toggleDrawer = useCallback(() => {\r\n        setDrawerOpen(current => !current)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AppBar color=\"primary\" position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <img onClick={() => history.push('/')} className={classes.logo} src={logo} alt=\"logo\"/>\r\n                    <FlexSpacer/>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" href=\"https://github.com/Shamadeaus/poke-pages\">\r\n                        <GitHubIcon/>\r\n                    </IconButton>\r\n                    <OverflowMenu>\r\n                        <MenuItem onClick={toggleTheme}>\r\n                            {theme === 'dark' ? 'Poke Ball Theme' : 'Dusk Ball Theme'}\r\n                        </MenuItem>\r\n                    </OverflowMenu>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer open={drawerOpen} onClose={toggleDrawer}>\r\n                <img onClick={() => {\r\n                    history.push('/')\r\n                    toggleDrawer()\r\n                }} className={classes.navLogo} src={navLogo} alt=\"nav-logo\" />\r\n                <Divider/>\r\n                <List className={classes.list}>\r\n                    {\r\n                        routes.map((route, key) => {\r\n                            return (\r\n                                <ListItem button key={key} onClick={() => {\r\n                                    history.push(route.path)\r\n                                    toggleDrawer()\r\n                                }}>\r\n                                    <ListItemIcon>\r\n                                        {route.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={route.text}/>\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApplicationBar\r\n","import { createMuiTheme } from \"@material-ui/core/styles\"\r\n\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#c62828'\r\n        }\r\n    }\r\n})\r\n\r\nexport default lightTheme","import { createMuiTheme } from \"@material-ui/core/styles\"\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            main: '#1b5e20'\r\n        }\r\n    }\r\n})\r\n\r\nexport default darkTheme","import React, {useState, useMemo, useCallback} from 'react'\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core'\r\nimport lightTheme from './lightTheme'\r\nimport darkTheme from './darkTheme'\r\nimport ThemeContext from './ThemeContext'\r\n\r\nfunction ThemeProvider({children}) {\r\n    const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light')\r\n\r\n    const toggleTheme = useCallback(() => {\r\n        setTheme(current => current === 'light' ? 'dark' : 'light')\r\n        localStorage.setItem('theme', theme === 'light' ? 'dark' : 'light')\r\n    }, [theme])\r\n\r\n    const currentTheme = useMemo(() => theme === 'light' ? lightTheme : darkTheme, [theme])\r\n\r\n    const value = useMemo(() => ({\r\n        theme,\r\n        toggleTheme\r\n    }), [theme, toggleTheme])\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            <MuiThemeProvider theme={currentTheme} >\r\n                {React.Children.map(children, child => React.cloneElement(child, {theme: currentTheme}))}\r\n            </MuiThemeProvider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeProvider\r\n","import React from 'react'\r\n\r\nfunction BodyStyles({theme}) {\r\n    return (\r\n        <style>\r\n            {\r\n                `\r\n                    body {\r\n                        background-color: ${theme.palette.background.default};\r\n                        margin: 0;\r\n                        padding: 0;\r\n                    }\r\n                `\r\n            }\r\n        </style>\r\n    )\r\n}\r\n\r\nexport default BodyStyles\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport routes, {homeRoute} from './routes'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        padding: '8px'\r\n    }\r\n}))\r\n\r\nfunction Router() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Switch>\r\n            {\r\n                routes.map((route, key) => <Route key={key} exact path={route.path}>\r\n                    <div className={classes.root}>\r\n                        {route.component}\r\n                    </div>\r\n                </Route>)\r\n            }\r\n            <Route path={homeRoute.path}>\r\n                <div className={classes.root}>\r\n                    {homeRoute.component}\r\n                </div>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Router\r\n","import React from 'react'\nimport ApplicationBar from '../layout/ApplicationBar'\nimport ThemeProvider from '../theme/ThemeProvider'\nimport BodyStyles from '../app/BodyStyles'\nimport Router from '../routing/Router'\nimport { HashRouter } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <HashRouter>\n            <ThemeProvider>\n                <BodyStyles/>\n                <ApplicationBar/>\n                <Router/>\n            </ThemeProvider>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/titleimg.aee5eebe.png\";","module.exports = __webpack_public_path__ + \"static/media/nav-logo.ffdeafbc.png\";"],"sourceRoot":""}